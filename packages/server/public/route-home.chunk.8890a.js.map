{"version":3,"sources":["webpack:///../src/index.js","webpack:///../node_modules/@socket.io/component-emitter/index.mjs","webpack:///../node_modules/engine.io-client/build/esm/util.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///../node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///../node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///../node_modules/socket.io-parser/build/esm/binary.js","webpack:///../node_modules/socket.io-client/build/esm/on.js","webpack:///../node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///../node_modules/socket.io-client/build/esm/index.js","webpack:///../node_modules/socket.io-client/build/esm/url.js","webpack:///../node_modules/engine.io-parser/build/esm/commons.js","webpack:///../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///../node_modules/engine.io-parser/build/esm/index.js","webpack:///../node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack:///../node_modules/engine.io-client/build/esm/transport.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///../node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///../node_modules/engine.io-client/build/esm/transports/index.js","webpack:///../node_modules/engine.io-client/build/esm/socket.js","webpack:///../node_modules/engine.io-client/build/esm/index.js","webpack:///../node_modules/socket.io-parser/build/esm/index.js","webpack:///../node_modules/socket.io-client/build/esm/socket.js","webpack:///../node_modules/socket.io-client/build/esm/manager.js","webpack:///./api/RtcConnection.ts","webpack:///./routes/home/index.tsx"],"names":["getHookState","index","type","options","__h","currentComponent","currentHook","hooks","__","length","push","__V","EMPTY","useState","initialState","reducer","init","hookState","currentIndex","_reducer","__c","invokeOrReturn","currentValue","__N","nextValue","action","setState","_hasScuFromHooks","prevScu","shouldComponentUpdate","p","s","c","__H","stateHooks","filter","x","every","call","this","shouldUpdate","forEach","hookItem","useReducer","flushAfterPaintEffects","component","afterPaintEffects","shift","__P","invokeCleanup","invokeEffect","e","__e","__v","afterNextFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","requestAnimationFrame","hook","comp","cleanup","argsChanged","oldArgs","newArgs","some","arg","f","Emitter","obj","key","prototype","mixin","pick","attr","reduce","acc","k","hasOwnProperty","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","NATIVE_SET_TIMEOUT","bind","globalThis","clearTimeoutFn","NATIVE_CLEAR_TIMEOUT","encode","num","encoded","alphabet","Math","floor","yeast","now","Date","prev","seed","str","i","encodeURIComponent","decode","qs","qry","pairs","split","l","pair","decodeURIComponent","XHR","xdomain","XMLHttpRequest","hasCORS","concat","join","empty","unloadHandler","Request","requests","abort","parse","src","b","indexOf","substring","replace","query","data","m","re","exec","uri","parts","source","host","authority","ipv6uri","pathNames","path","names","substr","splice","queryKey","$0","$1","$2","isBinary","withNativeArrayBuffer","ArrayBuffer","isView","buffer","withNativeBlob","Blob","withNativeFile","File","hasBinary","Array","isArray","toJSON","arguments","Object","deconstructPacket","packet","buffers","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","undefined","Error","on","ev","fn","off","Backoff","ms","min","max","factor","jitter","attempts","lookup","io","parsed","loc","location","protocol","charAt","test","port","id","href","url","forceNew","multiplex","cache","Manager","socket","previousComponent","prevRaf","oldBeforeDiff","oldBeforeRender","__r","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","__b","vnode","_mask","Fragment","_pendingArgs","commitQueue","cb","hasErrored","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","ERROR_PACKET","toString","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","encodePacket","supportsBinary","chars","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","mapBinary","decodePacket","encodedPacket","SEPARATOR","String","fromCharCode","addEventListener","event","_callbacks","once","apply","removeListener","removeAllListeners","removeEventListener","callbacks","emitReserved","emit","args","slice","listeners","hasListeners","globalThisShim","self","window","Function","TransportError","reason","description","context","Transport","writable","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","map","value","err","hasXHR2","responseType","Polling","polling","isSSL","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","onreadystatechange","status","onLoad","send","document","requestsCount","fromError","responseText","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","onerror","lastPacket","transports","websocket","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","setTransport","onDrain","freezeTransport","failed","onTransportClose","onupgrade","to","onTransportOpen","msg","upgrading","flush","error","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","size","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","RtcConnection","urls","RTCPeerConnection","pcConfig","peer","hascameraacces","pc","remoteStream","MediaStream","onRemoteStreamSet","localStream","mediaDevices","getUserMedia","video","audio","onLocalStreamSet","getTracks","track","console","log","addTrack","ontrack","streams","onicecandidate","candidate","iceCandidate","member","accept","createPeerConnection","offer","createOffer","setLocalDescription","remoteOffer","setRemoteDescription","tempAnswer","createAnswer","answer","currentRemoteDescription","addIceCandidate","Home","setLocalStream","setRemoteStream","rtcCon","stream","state","members","setMembers","setMessage","messages","setMessages","videoLocal","createRef","videoRemote","receivePermissionQuestion","SendSDP","sendSDPAnswer","handleSdpAnswer","receiveIceCandidate","onClick","askForPermission","onDirectChatInitiate","onChange","preventDefault","target","onTyping","current","getElementById","srcObject","ref","autoPlay","renderVideo"],"mappings":"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","file":"route-home.chunk.8890a.js","sourcesContent":["import { Fragment, options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tif (\n\t\ttypeof vnode.type === 'function' &&\n\t\t!vnode._mask &&\n\t\tvnode.type !== Fragment\n\t) {\n\t\tvnode._mask =\n\t\t\t(vnode._parent && vnode._parent._mask ? vnode._parent._mask : '') +\n\t\t\t(vnode._parent && vnode._parent._children\n\t\t\t\t? vnode._parent._children.indexOf(vnode)\n\t\t\t\t: 0);\n\t} else if (!vnode._mask) {\n\t\tvnode._mask =\n\t\t\tvnode._parent && vnode._parent._mask ? vnode._parent._mask : '';\n\t}\n\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nfunction hash(s) {\n\tlet h = 0,\n\t\ti = s.length;\n\twhile (i > 0) {\n\t\th = ((h << 5) - h + s.charCodeAt(--i)) | 0;\n\t}\n\treturn h;\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\tstate._value = 'P' + hash(currentComponent._vnode._mask) + currentIndex;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import io, { Socket } from 'socket.io-client';\r\n\r\nclass RtcConnection {\r\n\r\n    pcConfig : RTCConfiguration = {\"iceServers\": [{urls: \"stun:stun.l.google.com:19302\"}]}\r\n    pc : RTCPeerConnection = new RTCPeerConnection(this.pcConfig);\r\n\r\n    private localStream : MediaStream | undefined;\r\n    private remoteStream : MediaStream | undefined;\r\n\r\n    // Handler\r\n    public onLocalStreamSet = (stream : MediaStream) => {}\r\n    public onRemoteStreamSet = (stream : MediaStream) => {}\r\n\r\n    async createPeerConnection(socket : Socket, peer : any, hascameraacces : boolean = true) {\r\n        this.pc = new RTCPeerConnection();\r\n        this.remoteStream = new MediaStream();\r\n        this.onRemoteStreamSet(this.remoteStream);\r\n        // add remote stream to video element\r\n\r\n        if (!this.localStream) {\r\n            if (hascameraacces) {\r\n                this.localStream = await navigator.mediaDevices.getUserMedia({video:true, audio:false})\r\n                this.onLocalStreamSet(this.localStream);\r\n            }\r\n        }\r\n\r\n        if (this.localStream) {\r\n            this.localStream.getTracks().forEach((track) => {\r\n                if (this.localStream) {\r\n                    console.log(\"adding track\")\r\n                    this.pc.addTrack(track, this.localStream)\r\n                }\r\n            })\r\n        }\r\n\r\n        console.log(\"adding ontrack\")\r\n        this.pc.ontrack = (event) => {\r\n            console.log(\"ontrack\", event)\r\n            event.streams[0].getTracks().forEach((track) => {\r\n                if (this.remoteStream)\r\n                    this.remoteStream.addTrack(track)\r\n            })\r\n        }\r\n\r\n        this.pc.onicecandidate = async (event) => {\r\n            if(event.candidate){\r\n                // send ice candidate to other peer\r\n                if (event.candidate != null) {\r\n                    console.log(\"sending ice candidate\", event.candidate)\r\n                    socket.emit('icecandidate', {iceCandidate: event.candidate, peer : peer});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // ask for permission to start a connection with the receiving peer via the server\r\n    public async askForPermission(member : any, socket : any) {   //TODO : FIX any\r\n        // Make a http request to /room/askRTXPermission\r\n        socket.emit('askRTCPermission', {peer : member, msg : 'content (mayby say the kind of connection it wants'});\r\n\r\n    }\r\n\r\n    // receive a permission request from another peer via the server\r\n    public async receivePermissionQuestion(msg: any, socket : any) { //TODO : FIX any\r\n        // check if we want to accept the connection\r\n        const peer = msg.peer;\r\n\r\n        const accept = true;\r\n        // if yes, send a permission answer to the server\r\n        socket.emit('permissionAnswer', {peer : peer, accept :true});\r\n\r\n    }\r\n\r\n    // Send SDP offer to the peer\r\n    public async SendSDP(socket : any, peer : any) { //TODO : FIX any\r\n        await this.createPeerConnection(socket, peer);\r\n\r\n        let offer = await this.pc.createOffer();\r\n        await this.pc.setLocalDescription(offer);\r\n\r\n        // send offer to peer\r\n        socket.emit('sdpOffer', {offer, peer});\r\n\r\n        return\r\n    }\r\n\r\n    // Send SDP answer to the peer\r\n    public async sendSDPAnswer(socket : any, remoteOffer : {peer : any, offer : RTCSessionDescription}) { //TODO : FIX any\r\n        await this.createPeerConnection(socket, remoteOffer.peer, false);\r\n\r\n        await this.pc.setRemoteDescription(remoteOffer.offer);\r\n\r\n        let tempAnswer = await this.pc.createAnswer();\r\n        await this.pc.setLocalDescription(tempAnswer);\r\n\r\n        // send answer to peer\r\n        socket.emit('sdpAnswer', {answer : tempAnswer, peer : remoteOffer.peer});\r\n\r\n\r\n        return\r\n    }\r\n\r\n    public async handleSdpAnswer(socket : any, msg : {peer : any, answer : RTCSessionDescription}) {\r\n        if (! this.pc.currentRemoteDescription) {\r\n            await this.pc.setRemoteDescription(msg.answer);\r\n        }\r\n\r\n        return\r\n    }\r\n\r\n    // receive an ice candidate from a peer\r\n    public async receiveIceCandidate(msg : {iceCandidate : RTCIceCandidate, peer : any}) {\r\n        if (msg.iceCandidate) {\r\n            console.log(\"inside\", msg.iceCandidate)\r\n            console.log(\"receiver\", this.pc)\r\n            try {\r\n                await this.pc.addIceCandidate(msg.iceCandidate);\r\n            } catch (e) {\r\n                console.error('Error adding received ice candidate', e);\r\n            }\r\n        }\r\n    }\r\n\r\n    // close a connection with a peer\r\n    public async closeConnection() {\r\n\r\n    }\r\n\r\n    public async sendMsg(msg: string) {\r\n\r\n    }\r\n}\r\n\r\nexport default RtcConnection;","import { createRef, h } from 'preact';\r\nimport { useEffect, useState, useRef } from 'preact/hooks';\r\nimport io from 'socket.io-client';\r\nimport RtcConnection from '../../api/RtcConnection';\r\n\r\nconst Home = () => {\r\n\r\n\tconst socket = io('http://localhost:9005', {\r\n\t\ttransports: ['websocket'],\r\n\t});\r\n\r\n\r\n\t// Stream\r\n\tconst [localStream, setLocalStream] = useState<MediaStream>();\r\n\tconst [remoteStream, setRemoteStream] = useState<MediaStream>();\r\n\r\n\tconst rtcCon : RtcConnection = new RtcConnection();\r\n\r\n\trtcCon.onLocalStreamSet = (stream: MediaStream) => {\r\n\t\tsetLocalStream(stream);\r\n\t}\r\n\r\n\trtcCon.onRemoteStreamSet = (stream: MediaStream) => {\r\n\t\tsetRemoteStream(stream);\r\n\t}\r\n\r\n\r\n\t// State\r\n\tconst [members, setMembers] = useState<string[]>([]);\r\n\tconst [message, setMessage] = useState<string>(\"\");\r\n\tconst [messages, setMessages] = useState<string[]>([]);\r\n\tconst videoLocal = createRef();\r\n\tconst videoRemote = createRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.emit('join');\r\n\r\n\t\tsocket.on('members', (members) => {\r\n\t\t\tsetMembers(members);\r\n\t\t});\r\n\r\n\t\tsocket.on('chat', (message: string) => {\r\n\t\t\tsetMessages(m => [...m, message]);\r\n\t\t});\r\n\r\n\t\t// TODO : sdp should be exchanged now\r\n\t\t//        => nu nog ICE candidates\r\n\t\t// ICE candidates are only done when connecting a media stream\r\n\t\t// for example without specifing a video stream it does not work, with a video stream like jori it does\r\n\r\n\t\t// incoming messages pertaining to the rtc connection\r\n\t\t// RTCPermissionRequest : an incoming request to start a rtc connection\r\n\t\t// RTCPermissionAndwer : the answer from a peer to a rtc connection request\r\n\t\t// sdpOffer : the sdpOffer information from a peer\r\n\t\t// sdpAnswer : the sdpAnswer information from a peer\r\n\t\t// iceCandidate : an iceCandidate from a peer\r\n\t\tsocket.on('RTCPermissionRequest', (msg : {peer : any, accept : boolean}) => {\r\n\t\t\trtcCon.receivePermissionQuestion(msg, socket);\r\n\t\t});\r\n\r\n\t\tsocket.on('rtcPermissionAnswer', async (msg : {peer : any, accept : boolean}) => {\r\n            if(msg.accept) {\r\n                await rtcCon.SendSDP(socket, msg.peer);\r\n            }\r\n        });\r\n\r\n\t\tsocket.on('sdpOffer', async(remoteOffer : {peer : any, offer : RTCSessionDescription}) => {\r\n\t\t\trtcCon.sendSDPAnswer(socket, remoteOffer);\r\n\t\t});\r\n\r\n\t\tsocket.on('sdpAnswer', (answer : {peer : any, answer : RTCSessionDescription}) => {\r\n\t\t\trtcCon.handleSdpAnswer(socket, answer);\r\n\t\t})\r\n\r\n\t\tsocket.on('icecandidate', async (message : {iceCandidate : RTCIceCandidate, peer : any}) => {\r\n\t\t\trtcCon.receiveIceCandidate(message);\r\n\t\t});\r\n\r\n\t}, []);\r\n\r\n\t// Events\r\n\tconst onChatSend = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tsocket.emit('chat', message);\r\n\t\tsetMessage(\"\");\r\n\t}\r\n\r\n\tconst onTyping = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tconst message = e.target.value;\r\n\t\tsetMessage(message);\r\n\t}\r\n\r\n\tconst onDirectChatInitiate = (member: any) => {\r\n\t\trtcCon.askForPermission(member, socket);\r\n\t}\r\n\r\n\t// Render\r\n\tconst renderMembers = () => {\r\n\t\treturn members.map((member: any) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t{member}\r\n\t\t\t\t\t<button onClick={() => onDirectChatInitiate(member)}>DirectChat</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tconst renderMessages = () => {\r\n\r\n\t\tif (messages.length === 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\tBe the first one to say something!\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn messages.map((message: any) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t{message}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t//testing\r\n\tconst renderVideo = () => {\r\n\t\tconsole.log(\"videolocal : \", videoLocal);\r\n\t\tconsole.log(\"videolocal2 : \", videoLocal.current);\r\n\r\n\t\tconsole.log(\"localstream : \", localStream);\r\n\t\tconsole.log(\"remotestream : \", remoteStream);\r\n\t\tif (localStream) {\r\n\t\t\tconsole.log(\"rendering video\");\r\n\t\t\tconst video: HTMLVideoElement = document.getElementById(\"local-id\") as HTMLVideoElement;\r\n\t\t\tvideo.srcObject = localStream\r\n\t\t}\r\n\t\tif (remoteStream) {\r\n\t\t\tconsole.log(\"rendering remote video\");\r\n\t\t\tconst video: HTMLVideoElement = document.getElementById(\"remote-id\") as HTMLVideoElement;\r\n\t\t\tvideo.srcObject = remoteStream\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tlocal:\r\n\t\t\t\t<video ref={videoLocal} id={\"local-id\"} autoPlay></video>\r\n\t\t\t\tremote:\r\n\t\t\t\t<video ref={videoRemote} id={\"remote-id\"} autoPlay></video>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Dropper</h1>\r\n\t\t\t<h3>Friends who're online:</h3>\r\n\t\t\t<p>{renderMembers()}</p>\r\n\t\t\t<h3>Chat with friends:</h3>\r\n\t\t\t<input\r\n\t\t\t\tonChange={(e) => onTyping(e)}\r\n\t\t\t\tvalue={message}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={onChatSend}>Send</button>\r\n\t\t\t<hr />\r\n\t\t\t{renderMessages()}\r\n\t\t\t{renderVideo()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}
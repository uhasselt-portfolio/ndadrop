{"version":3,"sources":["webpack:///../src/index.js","webpack:///../node_modules/@socket.io/component-emitter/index.mjs","webpack:///../node_modules/engine.io-client/build/esm/util.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///../node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///../node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///../node_modules/socket.io-parser/build/esm/binary.js","webpack:///../node_modules/socket.io-client/build/esm/on.js","webpack:///../node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///../node_modules/socket.io-client/build/esm/index.js","webpack:///../node_modules/socket.io-client/build/esm/url.js","webpack:///../node_modules/engine.io-parser/build/esm/commons.js","webpack:///../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///../node_modules/engine.io-parser/build/esm/index.js","webpack:///../node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack:///../node_modules/engine.io-client/build/esm/transport.js","webpack:///../node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///../node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///../node_modules/engine.io-client/build/esm/transports/index.js","webpack:///../node_modules/engine.io-client/build/esm/socket.js","webpack:///../node_modules/engine.io-client/build/esm/index.js","webpack:///../node_modules/socket.io-parser/build/esm/index.js","webpack:///../node_modules/socket.io-client/build/esm/socket.js","webpack:///../node_modules/socket.io-client/build/esm/manager.js","webpack:///./api/RtcConnection.ts","webpack:///./routes/home/index.tsx"],"names":["getHookState","index","type","options","__h","currentComponent","currentHook","hooks","__","length","push","__V","EMPTY","useState","initialState","reducer","init","hookState","currentIndex","_reducer","__c","invokeOrReturn","currentValue","__N","nextValue","action","setState","_hasScuFromHooks","prevScu","shouldComponentUpdate","p","s","c","__H","stateHooks","filter","x","every","call","this","shouldUpdate","forEach","hookItem","useReducer","flushAfterPaintEffects","component","afterPaintEffects","shift","__P","invokeCleanup","invokeEffect","e","__e","__v","afterNextFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","requestAnimationFrame","hook","comp","cleanup","argsChanged","oldArgs","newArgs","some","arg","f","Emitter","obj","key","prototype","mixin","pick","attr","reduce","acc","k","hasOwnProperty","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","NATIVE_SET_TIMEOUT","bind","globalThis","clearTimeoutFn","NATIVE_CLEAR_TIMEOUT","encode","num","encoded","alphabet","Math","floor","yeast","now","Date","prev","seed","str","i","encodeURIComponent","XHR","xdomain","XMLHttpRequest","hasCORS","concat","join","empty","unloadHandler","Request","requests","abort","parse","src","b","indexOf","substring","replace","m","re","exec","uri","parts","source","host","authority","ipv6uri","pathNames","path","names","split","substr","splice","queryKey","query","data","$0","$1","$2","isBinary","withNativeArrayBuffer","ArrayBuffer","isView","buffer","withNativeBlob","Blob","withNativeFile","File","hasBinary","Array","isArray","l","toJSON","arguments","Object","deconstructPacket","packet","buffers","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","undefined","Error","on","ev","fn","off","Backoff","ms","min","max","factor","jitter","attempts","lookup","parsed","loc","location","protocol","charAt","test","port","id","href","url","io","forceNew","multiplex","cache","Manager","socket","previousComponent","prevRaf","oldBeforeDiff","oldBeforeRender","__r","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","__b","vnode","_mask","Fragment","_pendingArgs","commitQueue","cb","hasErrored","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","ERROR_PACKET","toString","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","encodePacket","supportsBinary","chars","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","mapBinary","decodePacket","encodedPacket","SEPARATOR","String","fromCharCode","addEventListener","event","_callbacks","once","apply","removeListener","removeAllListeners","removeEventListener","callbacks","emitReserved","emit","args","slice","listeners","hasListeners","globalThisShim","self","window","Function","TransportError","constructor","reason","description","context","super","Transport","writable","readyState","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","map","value","err","hasXHR2","responseType","method","async","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","onreadystatechange","status","onLoad","document","requestsCount","fromError","responseText","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","onerror","lastPacket","schema","secure","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","polling","isSSL","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","req","xhrStatus","pollXhr","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","freezeTransport","failed","onTransportClose","onupgrade","to","onTransportOpen","msg","upgrading","flush","error","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","size","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","volatile","engine","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","RtcConnection","urls","RTCPeerConnection","pcConfig","stream","peer","hascameraacces","pc","remoteStream","MediaStream","onRemoteStreamSet","localStream","mediaDevices","getUserMedia","video","audio","onLocalStreamSet","getTracks","track","console","log","addTrack","ontrack","streams","onicecandidate","candidate","iceCandidate","member","accept","createPeerConnection","offer","createOffer","setLocalDescription","remoteOffer","setRemoteDescription","tempAnswer","createAnswer","answer","currentRemoteDescription","addIceCandidate","Home","setLocalStream","setRemoteStream","rtcCon","members","setMembers","setMessage","messages","setMessages","videoLocal","createRef","videoRemote","state","receivePermissionQuestion","SendSDP","sendSDPAnswer","handleSdpAnswer","receiveIceCandidate","onClick","askForPermission","onDirectChatInitiate","onChange","preventDefault","target","onTyping","current","getElementById","srcObject","ref","autoPlay","renderVideo"],"mappings":"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","file":"route-home.chunk.96272.esm.js","sourcesContent":["import { Fragment, options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tif (\n\t\ttypeof vnode.type === 'function' &&\n\t\t!vnode._mask &&\n\t\tvnode.type !== Fragment\n\t) {\n\t\tvnode._mask =\n\t\t\t(vnode._parent && vnode._parent._mask ? vnode._parent._mask : '') +\n\t\t\t(vnode._parent && vnode._parent._children\n\t\t\t\t? vnode._parent._children.indexOf(vnode)\n\t\t\t\t: 0);\n\t} else if (!vnode._mask) {\n\t\tvnode._mask =\n\t\t\tvnode._parent && vnode._parent._mask ? vnode._parent._mask : '';\n\t}\n\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nfunction hash(s) {\n\tlet h = 0,\n\t\ti = s.length;\n\twhile (i > 0) {\n\t\th = ((h << 5) - h + s.charCodeAt(--i)) | 0;\n\t}\n\treturn h;\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\tstate._value = 'P' + hash(currentComponent._vnode._mask) + currentIndex;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import io, { Socket } from 'socket.io-client';\r\n\r\nclass RtcConnection {\r\n\r\n    pcConfig : RTCConfiguration = {\"iceServers\": [{urls: \"stun:stun.l.google.com:19302\"}]}\r\n    pc : RTCPeerConnection = new RTCPeerConnection(this.pcConfig);\r\n\r\n    private localStream : MediaStream | undefined;\r\n    private remoteStream : MediaStream | undefined;\r\n\r\n    // Handler\r\n    public onLocalStreamSet = (stream : MediaStream) => {}\r\n    public onRemoteStreamSet = (stream : MediaStream) => {}\r\n\r\n    async createPeerConnection(socket : Socket, peer : any, hascameraacces : boolean = true) {\r\n        this.pc = new RTCPeerConnection();\r\n        this.remoteStream = new MediaStream();\r\n        this.onRemoteStreamSet(this.remoteStream);\r\n        // add remote stream to video element\r\n\r\n        if (!this.localStream) {\r\n            if (hascameraacces) {\r\n                this.localStream = await navigator.mediaDevices.getUserMedia({video:true, audio:false})\r\n                this.onLocalStreamSet(this.localStream);\r\n            }\r\n        }\r\n\r\n        if (this.localStream) {\r\n            this.localStream.getTracks().forEach((track) => {\r\n                if (this.localStream) {\r\n                    console.log(\"adding track\")\r\n                    this.pc.addTrack(track, this.localStream)\r\n                }\r\n            })\r\n        }\r\n\r\n        console.log(\"adding ontrack\")\r\n        this.pc.ontrack = (event) => {\r\n            console.log(\"ontrack\", event)\r\n            event.streams[0].getTracks().forEach((track) => {\r\n                if (this.remoteStream)\r\n                    this.remoteStream.addTrack(track)\r\n            })\r\n        }\r\n\r\n        this.pc.onicecandidate = async (event) => {\r\n            if(event.candidate){\r\n                // send ice candidate to other peer\r\n                if (event.candidate != null) {\r\n                    console.log(\"sending ice candidate\", event.candidate)\r\n                    socket.emit('icecandidate', {iceCandidate: event.candidate, peer : peer});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // ask for permission to start a connection with the receiving peer via the server\r\n    public async askForPermission(member : any, socket : any) {   //TODO : FIX any\r\n        // Make a http request to /room/askRTXPermission\r\n        socket.emit('askRTCPermission', {peer : member, msg : 'content (mayby say the kind of connection it wants'});\r\n\r\n    }\r\n\r\n    // receive a permission request from another peer via the server\r\n    public async receivePermissionQuestion(msg: any, socket : any) { //TODO : FIX any\r\n        // check if we want to accept the connection\r\n        const peer = msg.peer;\r\n\r\n        const accept = true;\r\n        // if yes, send a permission answer to the server\r\n        socket.emit('permissionAnswer', {peer : peer, accept :true});\r\n\r\n    }\r\n\r\n    // Send SDP offer to the peer\r\n    public async SendSDP(socket : any, peer : any) { //TODO : FIX any\r\n        await this.createPeerConnection(socket, peer);\r\n\r\n        let offer = await this.pc.createOffer();\r\n        await this.pc.setLocalDescription(offer);\r\n\r\n        // send offer to peer\r\n        socket.emit('sdpOffer', {offer, peer});\r\n\r\n        return\r\n    }\r\n\r\n    // Send SDP answer to the peer\r\n    public async sendSDPAnswer(socket : any, remoteOffer : {peer : any, offer : RTCSessionDescription}) { //TODO : FIX any\r\n        await this.createPeerConnection(socket, remoteOffer.peer, false);\r\n\r\n        await this.pc.setRemoteDescription(remoteOffer.offer);\r\n\r\n        let tempAnswer = await this.pc.createAnswer();\r\n        await this.pc.setLocalDescription(tempAnswer);\r\n\r\n        // send answer to peer\r\n        socket.emit('sdpAnswer', {answer : tempAnswer, peer : remoteOffer.peer});\r\n\r\n\r\n        return\r\n    }\r\n\r\n    public async handleSdpAnswer(socket : any, msg : {peer : any, answer : RTCSessionDescription}) {\r\n        if (! this.pc.currentRemoteDescription) {\r\n            await this.pc.setRemoteDescription(msg.answer);\r\n        }\r\n\r\n        return\r\n    }\r\n\r\n    // receive an ice candidate from a peer\r\n    public async receiveIceCandidate(msg : {iceCandidate : RTCIceCandidate, peer : any}) {\r\n        if (msg.iceCandidate) {\r\n            console.log(\"inside\", msg.iceCandidate)\r\n            console.log(\"receiver\", this.pc)\r\n            try {\r\n                await this.pc.addIceCandidate(msg.iceCandidate);\r\n            } catch (e) {\r\n                console.error('Error adding received ice candidate', e);\r\n            }\r\n        }\r\n    }\r\n\r\n    // close a connection with a peer\r\n    public async closeConnection() {\r\n\r\n    }\r\n\r\n    public async sendMsg(msg: string) {\r\n\r\n    }\r\n}\r\n\r\nexport default RtcConnection;","import { createRef, h } from 'preact';\r\nimport { useEffect, useState, useRef } from 'preact/hooks';\r\nimport io from 'socket.io-client';\r\nimport RtcConnection from '../../api/RtcConnection';\r\n\r\nconst Home = () => {\r\n\r\n\tconst socket = io('http://localhost:9005', {\r\n\t\ttransports: ['websocket'],\r\n\t});\r\n\r\n\r\n\t// Stream\r\n\tconst [localStream, setLocalStream] = useState<MediaStream>();\r\n\tconst [remoteStream, setRemoteStream] = useState<MediaStream>();\r\n\r\n\tconst rtcCon : RtcConnection = new RtcConnection();\r\n\r\n\trtcCon.onLocalStreamSet = (stream: MediaStream) => {\r\n\t\tsetLocalStream(stream);\r\n\t}\r\n\r\n\trtcCon.onRemoteStreamSet = (stream: MediaStream) => {\r\n\t\tsetRemoteStream(stream);\r\n\t}\r\n\r\n\r\n\t// State\r\n\tconst [members, setMembers] = useState<string[]>([]);\r\n\tconst [message, setMessage] = useState<string>(\"\");\r\n\tconst [messages, setMessages] = useState<string[]>([]);\r\n\tconst videoLocal = createRef();\r\n\tconst videoRemote = createRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.emit('join');\r\n\r\n\t\tsocket.on('members', (members) => {\r\n\t\t\tsetMembers(members);\r\n\t\t});\r\n\r\n\t\tsocket.on('chat', (message: string) => {\r\n\t\t\tsetMessages(m => [...m, message]);\r\n\t\t});\r\n\r\n\t\t// TODO : sdp should be exchanged now\r\n\t\t//        => nu nog ICE candidates\r\n\t\t// ICE candidates are only done when connecting a media stream\r\n\t\t// for example without specifing a video stream it does not work, with a video stream like jori it does\r\n\r\n\t\t// incoming messages pertaining to the rtc connection\r\n\t\t// RTCPermissionRequest : an incoming request to start a rtc connection\r\n\t\t// RTCPermissionAndwer : the answer from a peer to a rtc connection request\r\n\t\t// sdpOffer : the sdpOffer information from a peer\r\n\t\t// sdpAnswer : the sdpAnswer information from a peer\r\n\t\t// iceCandidate : an iceCandidate from a peer\r\n\t\tsocket.on('RTCPermissionRequest', (msg : {peer : any, accept : boolean}) => {\r\n\t\t\trtcCon.receivePermissionQuestion(msg, socket);\r\n\t\t});\r\n\r\n\t\tsocket.on('rtcPermissionAnswer', async (msg : {peer : any, accept : boolean}) => {\r\n            if(msg.accept) {\r\n                await rtcCon.SendSDP(socket, msg.peer);\r\n            }\r\n        });\r\n\r\n\t\tsocket.on('sdpOffer', async(remoteOffer : {peer : any, offer : RTCSessionDescription}) => {\r\n\t\t\trtcCon.sendSDPAnswer(socket, remoteOffer);\r\n\t\t});\r\n\r\n\t\tsocket.on('sdpAnswer', (answer : {peer : any, answer : RTCSessionDescription}) => {\r\n\t\t\trtcCon.handleSdpAnswer(socket, answer);\r\n\t\t})\r\n\r\n\t\tsocket.on('icecandidate', async (message : {iceCandidate : RTCIceCandidate, peer : any}) => {\r\n\t\t\trtcCon.receiveIceCandidate(message);\r\n\t\t});\r\n\r\n\t}, []);\r\n\r\n\t// Events\r\n\tconst onChatSend = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tsocket.emit('chat', message);\r\n\t\tsetMessage(\"\");\r\n\t}\r\n\r\n\tconst onTyping = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tconst message = e.target.value;\r\n\t\tsetMessage(message);\r\n\t}\r\n\r\n\tconst onDirectChatInitiate = (member: any) => {\r\n\t\trtcCon.askForPermission(member, socket);\r\n\t}\r\n\r\n\t// Render\r\n\tconst renderMembers = () => {\r\n\t\treturn members.map((member: any) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t{member}\r\n\t\t\t\t\t<button onClick={() => onDirectChatInitiate(member)}>DirectChat</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tconst renderMessages = () => {\r\n\r\n\t\tif (messages.length === 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\tBe the first one to say something!\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn messages.map((message: any) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t{message}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t//testing\r\n\tconst renderVideo = () => {\r\n\t\tconsole.log(\"videolocal : \", videoLocal);\r\n\t\tconsole.log(\"videolocal2 : \", videoLocal.current);\r\n\r\n\t\tconsole.log(\"localstream : \", localStream);\r\n\t\tconsole.log(\"remotestream : \", remoteStream);\r\n\t\tif (localStream) {\r\n\t\t\tconsole.log(\"rendering video\");\r\n\t\t\tconst video: HTMLVideoElement = document.getElementById(\"local-id\") as HTMLVideoElement;\r\n\t\t\tvideo.srcObject = localStream\r\n\t\t}\r\n\t\tif (remoteStream) {\r\n\t\t\tconsole.log(\"rendering remote video\");\r\n\t\t\tconst video: HTMLVideoElement = document.getElementById(\"remote-id\") as HTMLVideoElement;\r\n\t\t\tvideo.srcObject = remoteStream\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tlocal:\r\n\t\t\t\t<video ref={videoLocal} id={\"local-id\"} autoPlay></video>\r\n\t\t\t\tremote:\r\n\t\t\t\t<video ref={videoRemote} id={\"remote-id\"} autoPlay></video>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Dropper</h1>\r\n\t\t\t<h3>Friends who're online:</h3>\r\n\t\t\t<p>{renderMembers()}</p>\r\n\t\t\t<h3>Chat with friends:</h3>\r\n\t\t\t<input\r\n\t\t\t\tonChange={(e) => onTyping(e)}\r\n\t\t\t\tvalue={message}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={onChatSend}>Send</button>\r\n\t\t\t<hr />\r\n\t\t\t{renderMessages()}\r\n\t\t\t{renderVideo()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}